{"version":3,"sources":["components/Header/Header.tsx","api/products.ts","components/Counter/Counter.tsx","components/ProductModal/Modal.tsx","components/ProductModal/ProductModal.tsx","components/ProductCard/ProductCard.tsx","components/ProductsList/ProductsList.tsx","components/ShoppingCart/ShoppingCartIcon.tsx","components/ShoppingCart/ShoppingCart.tsx","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["Header","logoName","className","getAllProducts","a","fetch","data","json","products","filter","product","category","init","initialCount","count","reducer","state","action","type","Error","Counter","handleChange","useReducer","counterState","dispatch","handleCounterChange","actionType","htmlFor","onClick","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","Modal","open","children","onClose","useState","isOpen","setIsOpen","closeModal","e","target","currentTarget","id","xmlns","ProductModal","toggleModal","toggleCart","addProductToCart","productQuantity","setProductQuantity","handleCartClick","src","image","alt","title","description","slice","toUpperCase","price","ProductCard","style","backgroundImage","name","productToAd","stopPropagation","handleAddToCart","ProductsList","onAddProductToCart","map","ShoppingCartIcon","itemsNumber","ShoppingCart","removeProductFromCart","isCartOpen","length","handleQuantityChange","width","height","x","y","reduce","acc","item","toFixed","MainPage","useQuery","isLoading","error","productInModal","setProductInModal","productsInCart","setProductsInCart","find","productInCart","prevProducts","setIsCartOpen","prevIsOpen","productId","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07eec7c8.chunk.js","sourcesContent":["import React from \"react\";\n\ntype HeaderProps = {\n  logoName: string;\n};\n\nconst Header = ({ logoName }: HeaderProps): JSX.Element => {\n  return (\n    <header className=\"text-center text-gray-500 mt-5 mb-16\">\n      <span className=\"text-3xl font-light\">{logoName}</span>\n    </header>\n  );\n};\n\nexport default Header;\n","import { Product } from \"../types/product\";\n\nexport const getAllProducts = async (): Promise<Product[]> => {\n  try {\n    const data = await fetch(\"https://fakestoreapi.com/products/\");\n\n    const products: Product[] = await data.json();\n    return products.filter((product) => product.category !== \"electronics\");\n  } catch (e) {\n    throw e;\n  }\n};\n","import { useReducer } from \"react\";\n\ntype counterState = {\n  count: number;\n};\n\nfunction init(initialCount: number) {\n  return { count: initialCount };\n}\n\ntype ACTIONTYPE = { type: \"increment\" } | { type: \"decrement\" };\n\nconst reducer = (state: counterState, action: ACTIONTYPE): counterState => {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      if (state.count - 1 < 0) return state;\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n};\n\ntype CounterProps = {\n  handleChange?(count: number): void;\n  initialCount?: number;\n};\n\nconst Counter = ({\n  handleChange,\n  initialCount = 1,\n}: CounterProps): JSX.Element => {\n  const [counterState, dispatch] = useReducer(reducer, initialCount, init);\n\n  const handleCounterChange = (actionType: \"increment\" | \"decrement\") => {\n    dispatch({ type: actionType });\n    if (handleChange) {\n      handleChange(\n        actionType === \"increment\"\n          ? counterState.count + 1\n          : counterState.count - 1\n      );\n    }\n  };\n\n  return (\n    <div className=\"mt-2\">\n      <label className=\"text-gray-700 text-sm\" htmlFor=\"count\">\n        Count:\n      </label>\n      <div className=\"flex items-center mt-1\">\n        <button\n          onClick={() => handleCounterChange(\"decrement\")}\n          className=\"text-gray-500 focus:outline-none focus:text-gray-600\"\n        >\n          <svg\n            className=\"h-5 w-5\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </button>\n        <span className=\"text-gray-700 text-lg mx-2\">{counterState.count}</span>\n        <button\n          onClick={() => handleCounterChange(\"increment\")}\n          className=\"text-gray-500 focus:outline-none focus:text-gray-600\"\n        >\n          <svg\n            className=\"h-5 w-5\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import { useState } from \"react\";\n\ntype ModalProps = {\n  open?: boolean;\n  onClose?(): void;\n};\n\nconst Modal: React.FC<ModalProps> = ({ open, children, onClose }) => {\n  const [isOpen, setIsOpen] = useState(open);\n\n  const closeModal = (e: React.MouseEvent) => {\n    if (e.target !== e.currentTarget) return;\n\n    if (onClose) onClose();\n\n    setIsOpen(false);\n  };\n\n  return (\n    <dialog\n      id=\"mymodaltop\"\n      className=\"bg-transparent z-0 relative w-screen h-screen\"\n      open={isOpen}\n    >\n      <div\n        id=\"modalBackdrop\"\n        onClick={closeModal}\n        className=\"p-7 flex justify-center items-start overflow-x-hidden overflow-y-auto fixed left-0 top-0 w-full h-full bg-blue-900 bg-opacity-50 z-50 transition-opacity duration-300 opacity-100\"\n      >\n        <div className=\"bg-white flex rounded-lg md:w-1/2 relative pb-5\">\n          <div className=\"flex flex-col items-start md:w-full\">\n            <div className=\"pt-4 pb-3 px-5 flex items-center w-full\">\n              <svg\n                className=\"ml-auto fill-current text-gray-700 w-5 h-5 cursor-pointer\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 18 18\"\n                onClick={closeModal}\n              >\n                <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n              </svg>\n            </div>\n            {children}\n          </div>\n        </div>\n      </div>\n    </dialog>\n  );\n};\n\nexport default Modal;\n","import Counter from \"components/Counter/Counter\";\nimport React, { useState } from \"react\";\nimport { Product, ProductInCart } from \"types/product\";\nimport Modal from \"./Modal\";\n\ntype ModalProps = {\n  product: Product | null;\n  toggleModal(product?: Product): void;\n  toggleCart(): void;\n  addProductToCart(product: ProductInCart): void;\n};\n\nconst ProductModal: React.FC<ModalProps> = ({\n  product,\n  toggleModal,\n  toggleCart,\n  addProductToCart,\n}) => {\n  const [productQuantity, setProductQuantity] = useState<number>(1);\n\n  const handleCartClick = () => {\n    if (product) {\n      addProductToCart({ ...product, count: productQuantity });\n    }\n  };\n\n  const handleOrderNowClick = () => {\n    handleCartClick();\n    toggleModal();\n\n    toggleCart();\n  };\n\n  return (\n    product && (\n      <Modal open={!!product} onClose={toggleModal}>\n        <div className=\"md:flex  px-7\">\n          <div className=\"w-full h-64 md:w-1/2 lg:h-full\">\n            <img\n              className=\"h-full w-full rounded-md object-scale-down max-w-lg mx-auto\"\n              src={product.image}\n              alt=\"Nike Air\"\n            />\n          </div>\n          <div className=\"w-full max-w-lg mx-auto mt-5 md:ml-8 md:mt-0 md:w-1/2\">\n            <h3 className=\"text-gray-800 uppercase text-lg mb-5\">\n              {product.title}\n            </h3>\n            <p className=\"text-gray-600 mb-3 text-sm\">\n              {product.description.slice(0, 1).toUpperCase() +\n                product.description.slice(1)}\n            </p>\n            <span className=\"text-gray-500 \">{product.price}$</span>\n            <hr className=\"my-3\" />\n            <Counter handleChange={setProductQuantity} />\n            <div className=\"flex items-center mt-6\">\n              <button\n                onClick={handleOrderNowClick}\n                className=\"px-8 py-2 bg-indigo-600 text-white text-sm font-medium rounded hover:bg-indigo-500 focus:outline-none focus:bg-indigo-500\"\n              >\n                Order Now\n              </button>\n              <button\n                onClick={handleCartClick}\n                className=\"mx-2 text-gray-600 border rounded-md p-2 hover:bg-gray-200 focus:outline-none\"\n              >\n                <svg\n                  className=\"h-5 w-5\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    )\n  );\n};\n\nexport default ProductModal;\n","import { Product, ProductInCart } from \"types/product\";\n\ntype ProductCardTypes = {\n  product: Product;\n  toggleModal(product?: Product): void;\n  addProductToCart(product: ProductInCart): void;\n};\n\nconst ProductCard = ({\n  product,\n  toggleModal,\n  addProductToCart,\n}: ProductCardTypes): JSX.Element => {\n  const handleAddToCart = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    productToAd: ProductInCart\n  ) => {\n    e.stopPropagation();\n    addProductToCart({ ...product, count: 1 });\n  };\n\n  return (\n    <div\n      onClick={() => toggleModal(product)}\n      className=\"w-full  max-w-sm h-96 mx-auto rounded-md shadow-md overflow-hidden cursor-pointer hover:shadow-xl\"\n    >\n      <div\n        className=\"flex items-end justify-end h-3/5  w-full bg-cover\"\n        style={{\n          backgroundImage: `url('${product.image}')`,\n        }}\n      >\n        <button\n          name=\"addToCart\"\n          onClick={(e) => handleAddToCart(e, { ...product, count: 0 })}\n          className=\"p-2 rounded-full bg-blue-600 text-white mx-2 -mb-4 hover:bg-blue-500 focus:outline-none focus:bg-blue-500\"\n        >\n          <svg\n            className=\"h-5 w-5\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n          </svg>\n        </button>\n      </div>\n      <div className=\"px-5 py-3 flex flex-col justify-between h-2/5 \">\n        <h3 className=\"text-gray-700 uppercase text-base\">{product.title}</h3>\n        <span className=\"text-gray-500 mt-2 bottom-0\">{product.price}$</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import ProductCard from \"components/ProductCard/ProductCard\";\nimport { Product, ProductInCart } from \"types/product\";\n\ntype ProductsListProps = {\n  products: Product[];\n  toggleModal(product?: Product): void;\n  onAddProductToCart(product: ProductInCart): void;\n};\n\nconst ProductsList = ({\n  products,\n  toggleModal,\n  onAddProductToCart,\n}: ProductsListProps): JSX.Element => {\n  return (\n    <ul className=\"list-none grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 my-6\">\n      {products.map((product) => (\n        <li key={product.id}>\n          <ProductCard\n            product={product}\n            toggleModal={toggleModal}\n            addProductToCart={onAddProductToCart}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ProductsList;\n","import React from \"react\";\n\ntype ShoppingCartItemProps = {\n  onClick(): void;\n  itemsNumber?: number;\n};\n\nconst ShoppingCartIcon = ({\n  onClick,\n  itemsNumber,\n}: ShoppingCartItemProps): JSX.Element => (\n  <button\n    className=\"shoppingCart fixed top-5 right-8 text-center bg-white rounded-full border-black border-2 p-2 \"\n    onClick={onClick}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"sm:h-8 sm:w-8 h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n      />\n    </svg>\n    <p className=\"bg-red-500 flex items-center justify-center text-white absolute -bottom-3 rounded-full w-7 h-7 -right-4 z-30 p-1\">\n      {itemsNumber}\n    </p>\n  </button>\n);\n\nexport default ShoppingCartIcon;\n","import { ProductInCart } from \"types/product\";\n\nimport Modal from \"components/ProductModal/Modal\";\nimport ShoppingCartIcon from \"./ShoppingCartIcon\";\nimport Counter from \"components/Counter/Counter\";\n\ntype ShoppingCartTypes = {\n  products: ProductInCart[];\n  removeProductFromCart(productId: number): void;\n  addProductToCart(product: ProductInCart): void;\n  isCartOpen?: boolean;\n  toggleCart(): void;\n};\n\nconst ShoppingCart = ({\n  products,\n  removeProductFromCart,\n  addProductToCart,\n  isCartOpen,\n  toggleCart,\n}: ShoppingCartTypes): JSX.Element => {\n  const handleQuantityChange = (product: ProductInCart) => {\n    addProductToCart({ ...product, count: 1 });\n  };\n\n  if (!isCartOpen)\n    return (\n      <ShoppingCartIcon\n        itemsNumber={products.reduce((acc, product) => product.count + acc, 0)}\n        onClick={toggleCart}\n      />\n    );\n\n  return (\n    <Modal open={isCartOpen} onClose={toggleCart}>\n      {products.length === 0 ? (\n        <div className=\" py-5 text-center w-full\">\n          <p>\n            Your cart is empty now, please go to our shop and get something\n            sweet :)\n          </p>\n        </div>\n      ) : (\n        <div className=\"bg-white h-full flex flex-col w-full  max-w-3xl p-6 space-y-4 sm:p-10 dark:bg-coolGray-900 dark:text-coolGray-100\">\n          <h2 className=\"text-xl font-semibold\">Your cart</h2>\n          <ul className=\"flex flex-col divide-y divide-coolGray-700\">\n            {products.map((product) => (\n              <li\n                key={product.id}\n                className=\"flex flex-col py-6 sm:flex-row sm:justify-between\"\n              >\n                <div className=\"flex w-full space-x-2 sm:space-x-4\">\n                  <img\n                    className=\"flex-shrink-0 object-scale-down w-20 h-20 dark:border-transparent rounded outline-none sm:w-32 sm:h-32\"\n                    src={product.image}\n                    alt={product.title}\n                  />\n                  <div className=\"flex flex-col justify-between w-full pb-4\">\n                    <div className=\"flex justify-between w-full pb-2\">\n                      <div className=\"space-y-1\">\n                        <h3 className=\"text-lg font-semibold leading-snug sm:pr-8\">\n                          {product.title}\n                        </h3>\n                        <p className=\"text-sm dark:text-coolGray-400\">\n                          Classic\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-lg font-semibold\">\n                          {product.price}$\n                        </p>\n                      </div>\n                    </div>\n                    <Counter\n                      initialCount={product.count}\n                      handleChange={() => handleQuantityChange(product)}\n                    />\n                    <div className=\"flex text-sm divide-x\">\n                      <button\n                        className=\"flex items-center px-2 py-1 pl-0 space-x-1\"\n                        onClick={() => removeProductFromCart(product.id)}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 512 512\"\n                          className=\"w-4 h-4 fillCurrent\"\n                        >\n                          <path d=\"M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z\"></path>\n                          <rect width=\"32\" height=\"200\" x=\"168\" y=\"216\"></rect>\n                          <rect width=\"32\" height=\"200\" x=\"240\" y=\"216\"></rect>\n                          <rect width=\"32\" height=\"200\" x=\"312\" y=\"216\"></rect>\n                          <path d=\"M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z\"></path>\n                        </svg>\n                        <span>Remove</span>\n                      </button>\n                      <button className=\"flex items-center px-2 py-1 space-x-1\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 512 512\"\n                          className=\"w-4 h-4 fillCurrent\"\n                        >\n                          <path d=\"M453.122,79.012a128,128,0,0,0-181.087.068l-15.511,15.7L241.142,79.114l-.1-.1a128,128,0,0,0-181.02,0l-6.91,6.91a128,128,0,0,0,0,181.019L235.485,449.314l20.595,21.578.491-.492.533.533L276.4,450.574,460.032,266.94a128.147,128.147,0,0,0,0-181.019ZM437.4,244.313,256.571,425.146,75.738,244.313a96,96,0,0,1,0-135.764l6.911-6.91a96,96,0,0,1,135.713-.051l38.093,38.787,38.274-38.736a96,96,0,0,1,135.765,0l6.91,6.909A96.11,96.11,0,0,1,437.4,244.313Z\"></path>\n                        </svg>\n                        <span>Add to favorites</span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n          <div className=\"space-y-1 text-right\">\n            <p>\n              Total amount:\n              <span className=\"font-semibold\">\n                {\" \"}\n                {products.reduce(\n                  (acc: number, item) =>\n                    +(+item.price * +item.count + acc).toFixed(2),\n                  0\n                )}\n                $\n              </span>\n            </p>\n            <p className=\"text-sm dark:text-coolGray-400\">\n              Not including taxes and shipping costs\n            </p>\n          </div>\n          <div className=\"flex justify-end space-x-4\">\n            <button\n              onClick={toggleCart}\n              className=\"px-6 py-2 border rounded-md dark:border-violet-400 border-blue-600 text-blue-600\"\n            >\n              Back\n              <span className=\"sr-only sm:not-sr-only\"> to shop</span>\n            </button>\n            {products.length > 0 && (\n              <button className=\"px-6 py-2 border rounded-md dark:bg-violet-400 dark:text-coolGray-900 bg-blue-500 text-white \">\n                <span className=\"sr-only sm:not-sr-only\">Continue to</span>{\" \"}\n                Checkout\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShoppingCart;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Product, ProductInCart } from \"types/product\";\n\nimport { getAllProducts } from \"api/products\";\n\nimport ProductModal from \"components/ProductModal/ProductModal\";\nimport ProductsList from \"components/ProductsList/ProductsList\";\nimport ShoppingCart from \"components/ShoppingCart/ShoppingCart\";\n\nconst MainPage = () => {\n  const { data, isLoading, error } = useQuery<Product[]>(\n    \"products\",\n    getAllProducts\n  );\n\n  const products = data!;\n\n  const [productInModal, setProductInModal] = useState<Product | null>(null);\n\n  const toggleModal = (product?: Product) =>\n    productInModal ? setProductInModal(null) : setProductInModal(product!);\n\n  const [productsInCart, setProductsInCart] = useState<ProductInCart[]>([]);\n\n  const addProductToCart = (product: ProductInCart) => {\n    const isInCart = productsInCart.find(\n      (productInCart) => productInCart.id === product.id\n    );\n\n    if (isInCart) {\n      setProductsInCart((prevProducts) =>\n        prevProducts.map((productInCart) =>\n          productInCart.id === product.id\n            ? { ...productInCart, count: productInCart.count + product.count }\n            : productInCart\n        )\n      );\n      return;\n    }\n\n    setProductsInCart((prevProducts) => [...prevProducts, product]);\n  };\n\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const toggleCart = () => setIsCartOpen((prevIsOpen) => !prevIsOpen);\n\n  const removeProductFromCart = (productId: number) => {\n    setProductsInCart((prevProducts) =>\n      prevProducts.filter((product) => product.id !== productId)\n    );\n  };\n\n  if (isLoading)\n    return (\n      <div className=\"w-full h-full fixed block top-0 left-0 bg-white opacity-75 z-50\">\n        <span className=\"text-blue-500 opacity-75 top-1/2 my-0 mx-auto block text-2xl relative w-0 h-0\">\n          Loading...\n        </span>\n      </div>\n    );\n\n  if (error) return <h2>Ooops...Something went wrong</h2>;\n\n  return (\n    <section className=\"main-page container mx-auto\">\n      <ProductsList\n        products={products}\n        toggleModal={toggleModal}\n        onAddProductToCart={addProductToCart}\n      />\n      <ProductModal\n        product={productInModal}\n        addProductToCart={addProductToCart}\n        toggleModal={toggleModal}\n        toggleCart={toggleCart}\n      />\n      <ShoppingCart\n        products={productsInCart}\n        removeProductFromCart={removeProductFromCart}\n        addProductToCart={addProductToCart}\n        isCartOpen={isCartOpen}\n        toggleCart={toggleCart}\n      />\n    </section>\n  );\n};\n\nexport default MainPage;\n","import Header from \"components/Header/Header\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport MainPage from \"./pages/MainPage\";\n\nconst queryClient = new QueryClient();\n\nconst App = (): JSX.Element => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Header logoName={\"TrendyCuts.\"} />\n      <MainPage />\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}